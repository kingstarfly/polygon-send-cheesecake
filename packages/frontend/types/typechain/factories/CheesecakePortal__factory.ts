/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CheesecakePortal,
  CheesecakePortalInterface,
} from "../CheesecakePortal";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CheesecakePortalError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "cakeSize",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "NewCheesecake",
    type: "event",
  },
  {
    inputs: [],
    name: "getAllDonations",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "message",
            type: "string",
          },
          {
            internalType: "string",
            name: "cakeSize",
            type: "string",
          },
          {
            internalType: "address",
            name: "giver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct CheesecakePortal.Cheesecake[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getQtyCheesecakes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_cakeSize",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_payAmountInWei",
        type: "uint256",
      },
    ],
    name: "sendCheesecake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "throwError",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052620000336040518060600160405280603f815260200162001445603f91396200007a60201b620007031760201c565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200020e565b6200011a8160405160240162000091919062000187565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200011d60201b60201c565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60006200015382620001ab565b6200015f8185620001b6565b935062000171818560208601620001c7565b6200017c81620001fd565b840191505092915050565b60006020820190508181036000830152620001a3818462000146565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620001e7578082015181840152602081019050620001ca565b83811115620001f7576000848401525b50505050565b6000601f19601f8301169050919050565b611227806200021e6000396000f3fe60806040526004361061004a5760003560e01c80632f7643a81461004f57806338a59a07146100665780638bf9bebe146100915780638da5cb5b146100ad578063d3864ba6146100d8575b600080fd5b34801561005b57600080fd5b50610064610103565b005b34801561007257600080fd5b5061007b610135565b6040516100889190610d2b565b60405180910390f35b6100ab60048036038101906100a69190610a1d565b6103aa565b005b3480156100b957600080fd5b506100c26106af565b6040516100cf9190610d10565b60405180910390f35b3480156100e457600080fd5b506100ed6106d5565b6040516100fa9190610e69565b60405180910390f35b6040517f7380804600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60606002805480602002602001604051908101604052809291908181526020016000905b828210156103a157838290600052602060002090600502016040518060a001604052908160008201805461018c90611031565b80601f01602080910402602001604051908101604052809291908181526020018280546101b890611031565b80156102055780601f106101da57610100808354040283529160200191610205565b820191906000526020600020905b8154815290600101906020018083116101e857829003601f168201915b5050505050815260200160018201805461021e90611031565b80601f016020809104026020016040519081016040528092919081815260200182805461024a90611031565b80156102975780601f1061026c57610100808354040283529160200191610297565b820191906000526020600020905b81548152906001019060200180831161027a57829003601f168201915b505050505081526020016002820180546102b090611031565b80601f01602080910402602001604051908101604052809291908181526020018280546102dc90611031565b80156103295780601f106102fe57610100808354040283529160200191610329565b820191906000526020600020905b81548152906001019060200180831161030c57829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152505081526020019060010190610159565b50505050905090565b600066038d7ea4c680009050808210156103f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f090610e49565b60405180910390fd5b600160008082825461040b9190610f4b565b9250508190555061043460405180606001604052806023815260200161119f602391393361079c565b60026040518060a001604052808681526020018781526020018581526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000190805190602001906104b89291906108fd565b5060208201518160010190805190602001906104d59291906108fd565b5060408201518160020190805190602001906104f29291906108fd565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015550506105856040518060400160405280601381526020017f53656e64696e67206f766572202564205745490000000000000000000000000081525083610838565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16836040516105cd90610cfb565b60006040518083038185875af1925050503d806000811461060a576040519150601f19603f3d011682016040523d82523d6000602084013e61060f565b606091505b5050905080610653576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064a90610e29565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f92f17b32c11ec73f63f825ade4144eb67741bc3b62f3de874d64a42e336c0d0f8688874260405161069f9493929190610d9f565b60405180910390a2505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006106fb6040518060600160405280603081526020016111c260309139600054610838565b600054905090565b610799816040516024016107179190610d4d565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506108d4565b50565b61083482826040516024016107b2929190610d6f565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506108d4565b5050565b6108d0828260405160240161084e929190610df9565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506108d4565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b82805461090990611031565b90600052602060002090601f01602090048101928261092b5760008555610972565b82601f1061094457805160ff1916838001178555610972565b82800160010185558215610972579182015b82811115610971578251825591602001919060010190610956565b5b50905061097f9190610983565b5090565b5b8082111561099c576000816000905550600101610984565b5090565b60006109b36109ae84610ea9565b610e84565b9050828152602081018484840111156109cb57600080fd5b6109d6848285610fef565b509392505050565b600082601f8301126109ef57600080fd5b81356109ff8482602086016109a0565b91505092915050565b600081359050610a1781611187565b92915050565b60008060008060808587031215610a3357600080fd5b600085013567ffffffffffffffff811115610a4d57600080fd5b610a59878288016109de565b945050602085013567ffffffffffffffff811115610a7657600080fd5b610a82878288016109de565b935050604085013567ffffffffffffffff811115610a9f57600080fd5b610aab878288016109de565b9250506060610abc87828801610a08565b91505092959194509250565b6000610ad48383610c59565b905092915050565b610ae581610fb3565b82525050565b610af481610fa1565b82525050565b610b0381610fa1565b82525050565b6000610b1482610eea565b610b1e8185610f0d565b935083602082028501610b3085610eda565b8060005b85811015610b6c5784840389528151610b4d8582610ac8565b9450610b5883610f00565b925060208a01995050600181019050610b34565b50829750879550505050505092915050565b6000610b8982610ef5565b610b938185610f29565b9350610ba3818560208601610ffe565b610bac81611121565b840191505092915050565b6000610bc282610ef5565b610bcc8185610f3a565b9350610bdc818560208601610ffe565b610be581611121565b840191505092915050565b6000610bfd600f83610f3a565b9150610c0882611132565b602082019050919050565b6000610c20600083610f1e565b9150610c2b8261115b565b600082019050919050565b6000610c43601b83610f3a565b9150610c4e8261115e565b602082019050919050565b600060a0830160008301518482036000860152610c768282610b7e565b91505060208301518482036020860152610c908282610b7e565b91505060408301518482036040860152610caa8282610b7e565b9150506060830151610cbf6060860182610aeb565b506080830151610cd26080860182610cdd565b508091505092915050565b610ce681610fe5565b82525050565b610cf581610fe5565b82525050565b6000610d0682610c13565b9150819050919050565b6000602082019050610d256000830184610adc565b92915050565b60006020820190508181036000830152610d458184610b09565b905092915050565b60006020820190508181036000830152610d678184610bb7565b905092915050565b60006040820190508181036000830152610d898185610bb7565b9050610d986020830184610afa565b9392505050565b60006080820190508181036000830152610db98187610bb7565b90508181036020830152610dcd8186610bb7565b90508181036040830152610de18185610bb7565b9050610df06060830184610cec565b95945050505050565b60006040820190508181036000830152610e138185610bb7565b9050610e226020830184610cec565b9392505050565b60006020820190508181036000830152610e4281610bf0565b9050919050565b60006020820190508181036000830152610e6281610c36565b9050919050565b6000602082019050610e7e6000830184610cec565b92915050565b6000610e8e610e9f565b9050610e9a8282611063565b919050565b6000604051905090565b600067ffffffffffffffff821115610ec457610ec36110f2565b5b610ecd82611121565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610f5682610fe5565b9150610f6183610fe5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f9657610f95611094565b5b828201905092915050565b6000610fac82610fc5565b9050919050565b6000610fbe82610fc5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561101c578082015181840152602081019050611001565b8381111561102b576000848401525b50505050565b6000600282049050600182168061104957607f821691505b6020821081141561105d5761105c6110c3565b5b50919050565b61106c82611121565b810181811067ffffffffffffffff8211171561108b5761108a6110f2565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b50565b7f496e73756666696369656e742066756e64732070726f76696465640000000000600082015250565b61119081610fe5565b811461119b57600080fd5b5056fe257320686173206a7573742073656e74206f76657220612063686565736563616b65215765206861766520256420746f74616c206e756d626572206f662063686565736563616b657320726563656976656420a2646970667358221220391842328fd9c47d1867659c9039a88efba67e2aa0d767c5f832f43301fdf3bd64736f6c63430008040033546869732069732066726f6d2074686520636f6e7374727563746f72206f662043686565736563616b65506f7274616c20536d61727420436f6e7472616374";

export class CheesecakePortal__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<CheesecakePortal> {
    return super.deploy(overrides || {}) as Promise<CheesecakePortal>;
  }
  getDeployTransaction(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CheesecakePortal {
    return super.attach(address) as CheesecakePortal;
  }
  connect(signer: Signer): CheesecakePortal__factory {
    return super.connect(signer) as CheesecakePortal__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CheesecakePortalInterface {
    return new utils.Interface(_abi) as CheesecakePortalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CheesecakePortal {
    return new Contract(address, _abi, signerOrProvider) as CheesecakePortal;
  }
}
